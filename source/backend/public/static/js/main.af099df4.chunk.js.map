{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/constants/login.js","components/auth/Login.js","components/auth/Register.js","components/private/PrivateRoute.js","components/constants/dashboard.js","components/Dashboard/Global.js","components/constants/dropdown.js","components/Dashboard/Produto.js","components/Dashboard/Colaborador.js","components/constants/graph.js","components/Graphs/avg.js","components/Graphs/std.js","components/Dashboard/Temporais.js","components/constants/tabs.js","components/Header/Header.js","components/Dashboard/Dashboard.js","components/App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","classes","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","bigAvatar","Login","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","userData","email","password","console","log","loginUser","inherits","createClass","key","nextProps","history","push","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","alt","src","Typography","variant","react_material_ui_form_validator_lib","ref","noValidate","required","fullWidth","label","name","autoComplete","autoFocus","error","validators","errorMessages","Button","color","Grid","container","item","Link","href","Component","connect","post","then","res","data","setItem","jwt_decode","catch","err","response","Signup","newUser","password2","registerUser","react_router_dom","withRouter","_ref","rest","objectWithoutProperties","react_router","assign","render","to","flexGrow","padding","textAlign","text","flexWrap","overflowY","textField","marginLeft","marginRight","button","paddingLeft","Global","createData","calories","fat","batatas","createData2","getGlobalState","asyncToGenerator","regenerator_default","mark","_callee","from","resStd","resLevel","resFast","resScore","dataavg","datastd","dataLevel","descrLevel","valueLevel","dataFast","celerUser","dataScore","scoreUser","wrap","_context","prev","next","formFields","get","concat","sent","map","l","_id","avgRTime","df","count","avgScore","stdDevScore","t0","stop","_x","_x2","age","total","neval","_this2","rows","rows2","style","xs","TextField","defaultValue","InputLabelProps","shrink","formatDate","moment","format","inputChangeHandler","date","onClick","Paper","Table","table","TableBody","row","TableRow","TableCell","scope","align","carbs","TableHead","row2","paperClasses","List","subheader","ListSubheader","ListItemText","primary","_componentDidMount","_callee2","_context2","dropdown","formControl","minWidth","selectEmpty","Produto","handleClick","event","prod","abrupt","getProdAPI","_ref2","readOnlyError","getProductName","_ref3","_callee3","resProd","dataProd","_context3","pn","product_name","prods","_x3","_x4","InputLabel","htmlFor","Select","input","Input","displayEmpty","MenuItem","Colaborador","GetColabAPI","colab","Math","floor","getColabName","Avg","getData","finalDate","score","s","d","year","month","day","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","Std","Temporais","Fragment","avg","std","background","top","TabContainer","children","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","newValue","centered","Tab","bind","Dashboard_Global","Dashboard_Colaborador","Dashboard_Produto","Dashboard_Temporais","Dashboard","_getPrototypeOf2","_len","args","Array","_key","onLogoutClick","components_Header_Header","jwtToken","currentTime","Date","now","exp","location","App","es","private_PrivateRoute","path","exact","Register","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af099df4.chunk.js","sourcesContent":["import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => {\r\n      //localStorage.setItem(\"name\", res.name);\r\n      history.push(\"/login\");\r\n    }) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const {\r\n        token\r\n      } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    bigAvatar: {\r\n        margin: 10,\r\n        width: 300,\r\n        height: 300,\r\n    }\r\n}));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { classes } from \"../constants/login\";\r\nimport axios from \"axios\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    console.log(userData);\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar\r\n              alt=\"IPCA\"\r\n              src=\"http://i68.tinypic.com/2gspvkm.png\"\r\n              className={classes.bigAvatar}\r\n            />{\" \"}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>{\" \"}\r\n            <ValidatorForm\r\n              ref=\"form\"\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n              <Grid container>\r\n                {/* <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid> */}\r\n                <Grid item>\r\n                  <Link href=\"#/Register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </ValidatorForm>{\" \"}\r\n          </div>{\" \"}\r\n        </Container>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React, {\r\n  Component\r\n} from \"react\";\r\nimport {\r\n  Link,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport {\r\n  connect\r\n} from \"react-redux\";\r\nimport {\r\n  registerUser\r\n} from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  ValidatorForm,\r\n  TextValidator\r\n} from \"react-material-ui-form-validator\";\r\nimport {\r\n  classes\r\n} from \"../constants/login\";\r\nexport class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      errors\r\n    } = this.state;\r\n    return ( <\r\n      div >\r\n      <\r\n      Container component = \"main\"\r\n      maxWidth = \"xs\" >\r\n      <\r\n      CssBaseline / >\r\n      <\r\n      div className = {\r\n        classes.paper\r\n      } >\r\n      <\r\n      Avatar alt = \"IPCA\"\r\n      src = \"http://i68.tinypic.com/2gspvkm.png\"\r\n      className = {\r\n        classes.bigAvatar\r\n      }\r\n      />{\" \"} <\r\n      Typography component = \"h1\"\r\n      variant = \"h5\" >\r\n      Sign up {\r\n        \" \"\r\n      } <\r\n      /Typography>{\" \"} <\r\n      ValidatorForm ref = \"form\"\r\n      className = {\r\n        classes.form\r\n      }\r\n      noValidate onSubmit = {\r\n        this.onSubmit\r\n      } >\r\n      <\r\n      TextValidator variant = \"outlined\"\r\n      margin = \"normal\"\r\n      required fullWidth type = \"text\"\r\n      id = \"name\"\r\n      label = \"Insert your name\"\r\n      name = \"name\"\r\n      autoComplete = \"name\"\r\n      autoFocus onChange = {\r\n        this.onChange\r\n      }\r\n      value = {\r\n        this.state.name\r\n      }\r\n      error = {\r\n        errors.name\r\n      }\r\n      validators = {\r\n        [\"required\"]\r\n      }\r\n      errorMessages = {\r\n        [\"this field is required\"]\r\n      }\r\n      />{\" \"} <\r\n      TextValidator variant = \"outlined\"\r\n      margin = \"normal\"\r\n      required fullWidth id = \"email\"\r\n      label = \"Insert your email\"\r\n      name = \"email\"\r\n      autoComplete = \"email\"\r\n      autoFocus onChange = {\r\n        this.onChange\r\n      }\r\n      value = {\r\n        this.state.email\r\n      }\r\n      error = {\r\n        errors.email\r\n      }\r\n      validators = {\r\n        [\"required\"]\r\n      }\r\n      errorMessages = {\r\n        [\"this field is required\"]\r\n      }\r\n      />{\" \"} <\r\n      TextValidator variant = \"outlined\"\r\n      margin = \"normal\"\r\n      required fullWidth name = \"password\"\r\n      label = \"Insert your Password\"\r\n      type = \"password\"\r\n      id = \"password\"\r\n      autoComplete = \"current-password\"\r\n      onChange = {\r\n        this.onChange\r\n      }\r\n      value = {\r\n        this.state.password\r\n      }\r\n      error = {\r\n        errors.password\r\n      }\r\n      validators = {\r\n        [\"required\"]\r\n      }\r\n      errorMessages = {\r\n        [\"this field is required\"]\r\n      }\r\n      />{\" \"} <\r\n      TextValidator variant = \"outlined\"\r\n      margin = \"normal\"\r\n      required fullWidth name = \"password\"\r\n      label = \"Repeat your Password\"\r\n      type = \"password\"\r\n      id = \"password2\"\r\n      autoComplete = \"current-password\"\r\n      onChange = {\r\n        this.onChange\r\n      }\r\n      value = {\r\n        this.state.password2\r\n      }\r\n      error = {\r\n        errors.password2\r\n      }\r\n      validators = {\r\n        [\"required\"]\r\n      }\r\n      errorMessages = {\r\n        [\"this field is required\"]\r\n      }\r\n      />{\" \"} <\r\n      Button type = \"submit\"\r\n      fullWidth variant = \"contained\"\r\n      color = \"primary\"\r\n      className = {\r\n        classes.submit\r\n      } >\r\n      Submit {\r\n        \" \"\r\n      } <\r\n      /Button>{\" \"} <\r\n      Grid item >\r\n      <\r\n      Link href = \"#/Login\"\r\n      variant = \"body2\" > {\r\n        \" \"\r\n      } {\r\n        \"Already have an account? Log in!\"\r\n      } {\r\n        \" \"\r\n      } <\r\n      /Link>{\" \"} <\r\n      /Grid>{\" \"} <\r\n      /ValidatorForm>{\" \"} <\r\n      /div>{\" \"} <\r\n      /Container>{\" \"} <\r\n      /div>\r\n    );\r\n  }\r\n}\r\n\r\nSignup.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, {\r\n    registerUser\r\n  }\r\n)(withRouter(Signup));","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        overflowY: `hidden`,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    padding: {\r\n        paddingLeft: \"16px\"\r\n    }\r\n}));","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport class Global extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"],\r\n      celerUser: [\"Top Utilizadores\"],\r\n      scoreUser: [\"Top Utilizadores\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n\r\n  render() {\r\n    //const { from, to } = this.state;\r\n\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    const theme = {\r\n      spacing: [0, 2, 3, 5, 8]\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getGlobalState(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users velocidade`} </ListSubheader>{\" \"}\r\n                {this.state.celerUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users score`} </ListSubheader>{\" \"}\r\n                {this.state.scoreUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        {/* <Grid container spacing={4}>\r\n                                                  <Prod />\r\n                                                </Grid>{\" \"} */}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  getGlobalState = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(`/issues/count?from=${from}&to=${to}`);\r\n      let data = res.data[0];\r\n\r\n      if (data === undefined) data = 0;\r\n\r\n      rest = await axios.get(`/issues/scoreAvg?from=${from}&to=${to}`);\r\n      let dataavg = rest.data[0];\r\n\r\n      console.log(dataavg);\r\n      if (dataavg === undefined) dataavg = 0;\r\n\r\n      resStd = await axios.get(`/issues/scoreStd?from=${from}&to=${to}`);\r\n      let datastd = resStd.data[0];\r\n      if (datastd === undefined) datastd = 0;\r\n\r\n      resLevel = await axios.get(\r\n        `/issues/priority/responseTimeAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataLevel = resLevel.data;\r\n\r\n      let descrLevel = dataLevel.map(l => l._id.name);\r\n      let valueLevel = dataLevel.map(l => l.avgRTime);\r\n\r\n      if (descrLevel === undefined) descrLevel = 0;\r\n      if (valueLevel === undefined) valueLevel = 0;\r\n\r\n      resFast = await axios.get(\r\n        `/issues/collaborators/responseTimeAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataFast = resFast.data;\r\n\r\n      let celerUser = dataFast.map(df => df._id.name);\r\n\r\n      if (celerUser === undefined) celerUser = 0;\r\n\r\n      //\r\n      resScore = await axios.get(\r\n        `/issues/collaborators/scoreAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataScore = resScore.data;\r\n      let scoreUser = dataScore.map(df => df._id.name);\r\n\r\n      if (scoreUser === undefined) scoreUser = 0;\r\n\r\n      this.setState({\r\n        count: data,\r\n        avgScore: dataavg,\r\n        stdDevScore: datastd,\r\n        descrLevel: descrLevel,\r\n        valueLevel: valueLevel,\r\n        celerUser: celerUser,\r\n        scoreUser: scoreUser\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getGlobalState();\r\n  }\r\n}\r\n\r\nexport default Global;\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const dropdown = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { dropdown } from \"../constants/dropdown\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport class Produto extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      prods: [],\r\n      prod: \"\",\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"],\r\n      celerUser: [\"Top Utilizadores\"],\r\n      scoreUser: [\"Top Utilizadores\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n  render() {\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getProductName(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                paddingLeft: \"15px\"\r\n              }}\r\n            >\r\n              <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                Produto{\" \"}\r\n              </InputLabel>{\" \"}\r\n              <Select\r\n                value={this.state.prods}\r\n                //defaultValue={this.state.prod}\r\n                //onChange={this.handleChange}\r\n                onChange={e => {\r\n                  this.getProdAPI(e);\r\n                  this.handleClick(e);\r\n                }}\r\n                input={<Input name=\"prods\" id=\"age-label-placeholder\" />}\r\n                displayEmpty\r\n                name=\"prods\"\r\n                className={dropdown.selectEmpty}\r\n              >\r\n                <MenuItem value={this.state.prod}>\r\n                  <em> Selecione o produto </em>{\" \"}\r\n                </MenuItem>{\" \"}\r\n                {this.state.prods.map((item, key) => (\r\n                  <MenuItem value={item} key={key} name=\"prod\">\r\n                    {\" \"}\r\n                    {item}{\" \"}\r\n                  </MenuItem>\r\n                ))}{\" \"}\r\n              </Select>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users velocidade`} </ListSubheader>{\" \"}\r\n                {this.state.celerUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users score`} </ListSubheader>{\" \"}\r\n                {this.state.scoreUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  // handleChange = prod => {\r\n  //   this.setState({ prod });\r\n  //   prod.forEach(selectedOption =>\r\n  //     console.log(`Selected: ${selectedOption.value}`)\r\n  //   );\r\n  // };\r\n\r\n  handleClick = async event => {\r\n    let value = event.target.value;\r\n\r\n    this.setState({\r\n      prod: value\r\n    });\r\n    console.log(\"1: \" + value);\r\n    return value;\r\n  };\r\n\r\n  getProdAPI = async e => {\r\n    let from = this.state.formFields.from;\r\n    let to = this.state.formFields.to;\r\n    //let value = e.target.value;\r\n    let prod = e.target.value;\r\n\r\n    //console.log(value);\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(\r\n        `/issues/count?from=${from}&to=${to}&product_name=${prod}`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    let data = res.data[0];\r\n    console.log(data);\r\n    if (data === undefined) data = 0;\r\n\r\n    rest = await axios.get(\r\n      `/issues/scoreAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataavg = rest.data[0];\r\n    if (dataavg === undefined) dataavg = 0;\r\n\r\n    resStd = await axios.get(\r\n      `/issues/scoreStd?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let datastd = resStd.data[0];\r\n    if (datastd === undefined) datastd = 0;\r\n\r\n    resLevel = await axios.get(\r\n      `/issues/priority/responseTimeAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataLevel = resLevel.data;\r\n\r\n    let descrLevel = dataLevel.map(l => l._id.name);\r\n    let valueLevel = dataLevel.map(l => l.avgRTime);\r\n    if (descrLevel === undefined) descrLevel = 0;\r\n    if (valueLevel === undefined) valueLevel = 0;\r\n\r\n    resFast = await axios.get(\r\n      `/issues/collaborators/responseTimeAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataFast = resFast.data;\r\n\r\n    const celerUser = dataFast.map(df => df._id.name);\r\n    if (celerUser === undefined) celerUser = 0;\r\n\r\n    //\r\n    resScore = await axios.get(\r\n      `/issues/collaborators/scoreAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataScore = resScore.data;\r\n    let scoreUser = dataScore.map(df => df._id.name);\r\n    if (scoreUser === undefined) scoreUser = 0;\r\n\r\n    this.setState({\r\n      count: data,\r\n      avgScore: dataavg,\r\n      stdDevScore: datastd,\r\n      descrLevel: descrLevel,\r\n      valueLevel: valueLevel,\r\n      celerUser: celerUser,\r\n      scoreUser: scoreUser\r\n    });\r\n  };\r\n\r\n  getProductName = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let resProd;\r\n\r\n    try {\r\n      resProd = await axios.get(`/issues/projects?from=${from}&to=${to}`);\r\n      let data = resProd.data;\r\n      const dataProd = data.map(pn => pn._id.product_name);\r\n      this.setState({\r\n        prods: dataProd\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getProductName();\r\n  }\r\n}\r\n\r\nexport default Produto;\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { dropdown } from \"../constants/dropdown\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport class Colaborador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      prods: [\"Sem nome\"],\r\n      prod: \"\",\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n  render() {\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                //defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                //defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getColabName(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                paddingLeft: \"15px\"\r\n              }}\r\n            >\r\n              <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                Produto{\" \"}\r\n              </InputLabel>{\" \"}\r\n              <Select\r\n                value={this.state.prod}\r\n                //defaultValue={this.state.prod}\r\n                //onChange={this.handleChange}\r\n                onChange={e => {\r\n                  this.GetColabAPI(e);\r\n                  this.handleClick(e);\r\n                }}\r\n                input={<Input name=\"prod\" id=\"age-label-placeholder\" />}\r\n                displayEmpty\r\n                name=\"prod\"\r\n                className={dropdown.selectEmpty}\r\n              >\r\n                <MenuItem value={this.state.prod}>\r\n                  <em> Selecione o colaborador </em>{\" \"}\r\n                </MenuItem>{\" \"}\r\n                {this.state.prods.map((item, key) => (\r\n                  <MenuItem value={item} key={key} name=\"prod\">\r\n                    {\" \"}\r\n                    {item}{\" \"}\r\n                  </MenuItem>\r\n                ))}{\" \"}\r\n              </Select>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  // handleChange = prod => {\r\n  //   this.setState({ prod });\r\n  //   prod.forEach(selectedOption =>\r\n  //     console.log(`Selected: ${selectedOption.value}`)\r\n  //   );\r\n  // };\r\n\r\n  handleClick = async event => {\r\n    let value = event.target.value;\r\n\r\n    this.setState({\r\n      prod: value\r\n    });\r\n    console.log(this.state);\r\n\r\n    return value;\r\n  };\r\n\r\n  GetColabAPI = async e => {\r\n    let from = this.state.formFields.from;\r\n    let to = this.state.formFields.to;\r\n    //let value = e.target.value;\r\n    let colab = e.target.value;\r\n\r\n    //console.log(value);\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(\r\n        `/issues/count?from=${from}&to=${to}&collaborator_name=${colab}`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    let data = res.data[0];\r\n    if (data === undefined) data = 0;\r\n\r\n    rest = await axios.get(\r\n      `/issues/scoreAvg?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let dataavg = Math.floor(rest.data[0]);\r\n    if (dataavg === undefined) dataavg = 0;\r\n\r\n    resStd = await axios.get(\r\n      `/issues/scoreStd?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let datastd = resStd.data[0];\r\n    if (datastd === undefined) datastd = 0;\r\n\r\n    resLevel = await axios.get(\r\n      `/issues/priority/responseTimeAvg?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let dataLevel = resLevel.data;\r\n\r\n    let descrLevel = dataLevel.map(l => l._id.name);\r\n    let valueLevel = dataLevel.map(l => l.avgRTime);\r\n    if (descrLevel === undefined) descrLevel = 0;\r\n    if (valueLevel === undefined) valueLevel = 0;\r\n\r\n    this.setState({\r\n      count: data,\r\n      avgScore: dataavg,\r\n      stdDevScore: datastd,\r\n      descrLevel: descrLevel,\r\n      valueLevel: valueLevel\r\n    });\r\n  };\r\n\r\n  getColabName = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let resProd;\r\n\r\n    try {\r\n      resProd = await axios.get(`/issues/collaborators?from=${from}&to=${to}`);\r\n      let data = resProd.data;\r\n      const dataProd = data.map(pn => pn._id.name);\r\n      this.setState(\r\n        {\r\n          prods: dataProd\r\n        },\r\n        () => {\r\n          console.log(\"1\" + this.state);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getColabName();\r\n    //this.GetColabAPI();\r\n  }\r\n}\r\n\r\nexport default Colaborador;\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));","import Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nclass Avg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formFields: { from: \"\", to: \"\" },\r\n      //score: 1,\r\n      //finalDate: [\"2019-06-01\"]\r\n      labels: [],\r\n      data: []\r\n\r\n      // const data = {\r\n      //   labels: this.state.finalDate,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: \"Score\",\r\n      //       fill: false,\r\n      //       lineTension: 0.1,\r\n      //       backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      //       borderColor: \"rgba(75,192,192,1)\",\r\n      //       borderCapStyle: \"butt\",\r\n      //       borderDash: [],\r\n      //       borderDashOffset: 0.0,\r\n      //       borderJoinStyle: \"miter\",\r\n      //       pointBorderColor: \"rgba(75,192,192,1)\",\r\n      //       pointBackgroundColor: \"#fff\",\r\n      //       pointBorderWidth: 1,\r\n      //       pointHoverRadius: 5,\r\n      //       pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      //       pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      //       pointHoverBorderWidth: 2,\r\n      //       pointRadius: 1,\r\n      //       pointHitRadius: 10,\r\n      //       data: this.state.score\r\n      //     }\r\n      //   ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form style={{ display: \"inline-flex\", padding: \"15px\" }}>\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"De\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              //value={this.name}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.from}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Até\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              //value={this.target.value}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.to}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={e => this.getData(this.state.formFields)}\r\n            >\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n          </Grid>{\" \"}\r\n        </form>\r\n\r\n        <Line data={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getData = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    try {\r\n      let res = await axios.get(\r\n        `/issues/periodic/count?from=${from}&to=${to}`\r\n      );\r\n      let data = res.data;\r\n      let finalDate = [];\r\n      let score = data.map(s => s.count);\r\n      let date = data.map(d =>\r\n        finalDate.push(`${d._id.year}-${d._id.month}-${d._id.day}`)\r\n      );\r\n      console.log(score);\r\n      console.log(finalDate);\r\n      this.setState({\r\n        labels: finalDate,\r\n        datasets: [\r\n          {\r\n            label: \"média\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 0.1,\r\n            pointHitRadius: 10,\r\n            data: score\r\n          }\r\n        ]\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = { ...this.state.formFields };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n}\r\n\r\nexport default Avg;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nclass Std extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      //score: 1,\r\n      //finalDate: [\"2019-06-01\"]\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: [],\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: \"rgba(75,192,192,0.4)\",\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgba(75,192,192,1)\",\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: []\r\n        }\r\n      ]\r\n\r\n      // const data = {\r\n      //   labels: this.state.finalDate,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: \"Score\",\r\n      //       fill: false,\r\n      //       lineTension: 0.1,\r\n      //       backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      //       borderColor: \"rgba(75,192,192,1)\",\r\n      //       borderCapStyle: \"butt\",\r\n      //       borderDash: [],\r\n      //       borderDashOffset: 0.0,\r\n      //       borderJoinStyle: \"miter\",\r\n      //       pointBorderColor: \"rgba(75,192,192,1)\",\r\n      //       pointBackgroundColor: \"#fff\",\r\n      //       pointBorderWidth: 1,\r\n      //       pointHoverRadius: 5,\r\n      //       pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      //       pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      //       pointHoverBorderWidth: 2,\r\n      //       pointRadius: 1,\r\n      //       pointHitRadius: 10,\r\n      //       data: this.state.score\r\n      //     }\r\n      //   ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          style={{\r\n            display: \"inline-flex\",\r\n            padding: \"15px\"\r\n          }}\r\n        >\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"De\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              //value={this.name}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.from}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Até\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              //value={this.target.value}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.to}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={e => this.getData(this.state.formFields)}\r\n            >\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n          </Grid>{\" \"}\r\n        </form>\r\n        <Line data={this.state} />{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getData = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    try {\r\n      let res = await axios.get(\r\n        `/issues/periodic/scoreAvg?from=${from}&to=${to}`\r\n      );\r\n      let data = res.data;\r\n      let finalDate = [];\r\n      let score = data.map(s => s.avgScore);\r\n      let date = data.map(d =>\r\n        finalDate.push(`${d._id.year}-${d._id.month}-${d._id.day}`)\r\n      );\r\n      console.log(score);\r\n      console.log(finalDate);\r\n      this.setState({\r\n        labels: finalDate,\r\n        datasets: [\r\n          {\r\n            label: \"Desvio Padrão\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: score\r\n          }\r\n        ]\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n}\r\n\r\nexport default Std;\r\n","import React, { Component } from \"react\";\r\nimport { classes } from \"../constants/graph\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avg from \"../Graphs/avg\";\r\nimport Std from \"../Graphs/std\";\r\n\r\nexport class Temporais extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Avg />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Std />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temporais;\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        top: 0\r\n    }\r\n\r\n}));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {\r\n  connect\r\n} from \"react-redux\";\r\nimport {\r\n  logoutUser\r\n} from \"../../actions/authActions\";\r\nimport Global from \"../Dashboard/Global\";\r\nimport Produto from \"../Dashboard/Produto\";\r\nimport Colaborador from \"../Dashboard/Colaborador\";\r\nimport Temporais from \"../Dashboard/Temporais\";\r\nimport CSSTransitionGroup from \"react-addons-css-transition-group\";\r\n\r\nimport {\r\n  classes\r\n} from \"../constants/tabs\";\r\n\r\nfunction TabContainer(props) {\r\n  return ( <\r\n    Typography component = \"div\"\r\n    style = {\r\n      {\r\n        padding: 8 * 3\r\n      }\r\n    } >\r\n    {\r\n      \" \"\r\n    } {\r\n      props.children\r\n    } {\r\n      \" \"\r\n    } <\r\n    /Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\n//const sections = [\"Indicador 1\", \"Indicador 2\", \"Indicador 2\", \"Indicador 2\"];\r\n\r\nconst PageShell = (Page, previous) => {\r\n  return props => ( <\r\n    div className = \"page\" >\r\n    <\r\n    CSSTransitionGroup transitionAppear = {\r\n      true\r\n    }\r\n    transitionAppearTimeout = {\r\n      600\r\n    }\r\n    transitionEnterTimeout = {\r\n      600\r\n    }\r\n    transitionLeaveTimeout = {\r\n      600\r\n    }\r\n    transitionName = {\r\n      props.match.path === \"/one\" ? \"SlideIn\" : \"SlideOut\"\r\n    } >\r\n    {\r\n      console.log(props)\r\n    } < Page {\r\n      ...props\r\n    }\r\n    />{\" \"} <\r\n    /CSSTransitionGroup>{\" \"} <\r\n    /div>\r\n  );\r\n};\r\n\r\nconst Header = props => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n\r\n  return ( <\r\n    div className = {\r\n      classes.root\r\n    } >\r\n    <\r\n    AppBar position = \"sticky\" >\r\n    <\r\n    Tabs value = {\r\n      value\r\n    }\r\n    onChange = {\r\n      handleChange\r\n    }\r\n    centered > {\r\n      \" \"\r\n    } {\r\n      /* <Tabs value={value} onChange={handleChange}>\r\n                            {sections.map(section => (\r\n                              <Tab label={section} />\r\n                            ))}\r\n                          </Tabs> */\r\n    } {\r\n      \" \"\r\n    } <\r\n    Tab label = \"Indicadores Globais\" / >\r\n    <\r\n    Tab label = \"Indicadores Colaboradores\" / >\r\n    <\r\n    Tab label = \"Indicadores Produto\" / >\r\n    <\r\n    Tab label = \"Indicadores Temporais\" / > {\r\n      props.name\r\n    } <\r\n    Button color = \"inherit\"\r\n    onClick = {\r\n      onLogoutClick.bind(this)\r\n    } >\r\n    Logout {\r\n      \" \"\r\n    } <\r\n    /Button>{\" \"} <\r\n    /Tabs>{\" \"} <\r\n    /AppBar>{\" \"} {\r\n      value === 0 && ( <\r\n        TabContainer >\r\n        <\r\n        Container maxWidth = \"xl\" >\r\n        <\r\n        Global / >\r\n        <\r\n        /Container>{\" \"} <\r\n        /TabContainer>\r\n      )\r\n    } {\r\n      \" \"\r\n    } {\r\n      value === 1 && ( <\r\n        TabContainer >\r\n        <\r\n        Container maxWidth = \"xl\" >\r\n        <\r\n        Colaborador / >\r\n        <\r\n        /Container>{\" \"} <\r\n        /TabContainer>\r\n      )\r\n    } {\r\n      \" \"\r\n    } {\r\n      value === 2 && ( <\r\n        TabContainer >\r\n        <\r\n        Container maxWidth = \"xl\" >\r\n        <\r\n        Produto / >\r\n        <\r\n        /Container>{\" \"} <\r\n        /TabContainer>\r\n      )\r\n    } {\r\n      \" \"\r\n    } {\r\n      value === 3 && ( <\r\n        TabContainer >\r\n        <\r\n        Container maxWidth = \"xl\" >\r\n        <\r\n        Temporais / >\r\n        <\r\n        /Container>{\" \"} <\r\n        /TabContainer>\r\n      )\r\n    } {\r\n      \" \"\r\n    } <\r\n    /div>\r\n  );\r\n};\r\n\r\n//export default Dashboard;\r\nHeader.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps, {\r\n    logoutUser\r\n  }\r\n)(Header);","import React, {\r\n  Component\r\n} from \"react\";\r\nimport Header from \"../Header/Header\";\r\nexport class Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    return ( <\r\n      >\r\n      <\r\n      Header / >\r\n      <\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"../actions/authActions\";\r\nimport Login from \"./auth/Login\";\r\nimport Register from \"./auth/Register\";\r\nimport PrivateRoute from \"./private/PrivateRoute\";\r\n\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Signup from \"./auth/Register\";\r\nimport \"typeface-roboto\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Switch>\r\n          <PrivateRoute path=\"/Dashboard\" component={Dashboard} />{\" \"}\r\n          <Route path=\"/Login\" component={Login} />{\" \"}\r\n          <Route path=\"/\" exact component={Login} />{\" \"}\r\n          <Route path=\"/Register\" exact component={Register} />{\" \"}\r\n          <Route path=\"/Signup\" component={Signup} />{\" \"}\r\n        </Switch>{\" \"}\r\n      </HashRouter>{\" \"}\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App; // instead of \"export default App;\"\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}