{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/constants/login.js","components/auth/Login.js","components/auth/Register.js","components/private/PrivateRoute.js","components/constants/dashboard.js","components/constants/bootsrap.js","components/constants/dropdown.js","components/constants/table.js","components/Dashboard/Global.js","components/constants/graph.js","components/Dashboard/Produto.js","components/Dashboard/Colaborador.js","components/Graphs/avg.js","components/Graphs/std.js","components/Dashboard/Temporais.js","components/constants/tabs.js","components/Header/Header.js","components/Footer/Footer.js","components/Dashboard/Dashboard.js","components/App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","classes","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","bigAvatar","Login","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","userData","email","password","console","log","loginUser","inherits","createClass","key","nextProps","history","push","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","alt","src","Typography","variant","react_material_ui_form_validator_lib","ref","noValidate","required","fullWidth","label","name","autoComplete","autoFocus","error","validators","errorMessages","Button","color","Grid","container","item","Link","href","Component","connect","post","then","res","data","setItem","jwt_decode","catch","err","response","Signup","newUser","password2","registerUser","react_router_dom","withRouter","_ref","rest","objectWithoutProperties","react_router","assign","render","to","flexGrow","padding","textAlign","text","flexWrap","overflowY","textField","marginLeft","marginRight","button","paddingLeft","formControl","minWidth","selectEmpty","dropdown","overflowX","table","Global","createData","calories","fat","batatas","createData2","getGlobalState","asyncToGenerator","regenerator_default","mark","_callee","from","resStd","resLevel","resFast","resScore","dataavg","datastd","dataLevel","descrLevel","valueLevel","dataFast","celerUser","dataScore","scoreUser","wrap","_context","prev","next","formFields","get","concat","sent","map","l","_id","avgRTime","df","count","avgScore","stdDevScore","t0","stop","_x","_x2","age","total","neval","_this2","rows","rows2","style","xs","TextField","defaultValue","InputLabelProps","shrink","formatDate","moment","format","inputChangeHandler","date","onClick","Paper","Table","TableBody","row","TableRow","TableCell","scope","align","carbs","TableHead","row2","paperClasses","List","subheader","ListSubheader","ListItemText","primary","_componentDidMount","_callee2","_context2","Produto","handleClick","event","prod","abrupt","getProdAPI","_ref2","readOnlyError","getProductName","_ref3","_callee3","resProd","dataProd","_context3","pn","product_name","prods","_x3","_x4","InputLabel","htmlFor","Select","input","Input","displayEmpty","MenuItem","Colaborador","GetColabAPI","colab","getColabName","Avg","getData","finalDate","score","s","d","year","month","day","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","Std","Temporais","Fragment","avg","std","background","top","TabContainer","children","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","newValue","centered","Tab","bind","Dashboard_Global","Dashboard_Colaborador","Dashboard_Produto","Dashboard_Temporais","minHeight","footer","Dashboard","_getPrototypeOf2","_len","args","Array","_key","onLogoutClick","components_Header_Header","jwtToken","currentTime","Date","now","exp","location","App","es","private_PrivateRoute","path","exact","Register","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86b7e0eb.chunk.js","sourcesContent":["import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => {\r\n      //localStorage.setItem(\"name\", res.name);\r\n      history.push(\"/login\");\r\n    }) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const {\r\n        token\r\n      } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    bigAvatar: {\r\n        margin: 10,\r\n        width: 300,\r\n        height: 300,\r\n    }\r\n}));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { classes } from \"../constants/login\";\r\nimport axios from \"axios\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    console.log(userData);\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar\r\n              alt=\"IPCA\"\r\n              src=\"http://i68.tinypic.com/2gspvkm.png\"\r\n              className={classes.bigAvatar}\r\n            />{\" \"}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>{\" \"}\r\n            <ValidatorForm\r\n              ref=\"form\"\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n              <Grid container>\r\n                {/* <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid> */}\r\n                <Grid item>\r\n                  <Link href=\"#/Register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </ValidatorForm>{\" \"}\r\n          </div>{\" \"}\r\n        </Container>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { classes } from \"../constants/login\";\r\nimport classnames from \"classnames\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/Dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar\r\n              alt=\"IPCA\"\r\n              src=\"http://i68.tinypic.com/2gspvkm.png\"\r\n              className={classes.bigAvatar}\r\n            />{\" \"}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up{\" \"}\r\n            </Typography>{\" \"}\r\n            <ValidatorForm\r\n              ref=\"form\"\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={this.onSubmit}\r\n            >\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"text\"\r\n                id=\"name\"\r\n                label=\"Insert your name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                onChange={this.onChange}\r\n                value={this.state.name}\r\n                error={errors.name}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Insert your email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Insert your Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Repeat your Password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password2}\r\n                error={errors.password2}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />{\" \"}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n              <Grid item>\r\n                <Link href=\"#/Login\" variant=\"body2\">\r\n                  {\" \"}\r\n                  {\"Already have an account? Log in!\"}{\" \"}\r\n                </Link>{\" \"}\r\n              </Grid>{\" \"}\r\n            </ValidatorForm>{\" \"}\r\n          </div>{\" \"}\r\n        </Container>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignup.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Signup));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        overflowY: `hidden`,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    padding: {\r\n        paddingLeft: \"16px\"\r\n    }\r\n}));","import {\r\n    makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const formClasses = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const dropdown = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const paperTable = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { formClasses } from \"../constants/bootsrap\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { paperTable } from \"../constants/table\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { dropdown } from \"../constants/dropdown\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nexport class Global extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"],\r\n      celerUser: [\"Top Utilizadores\"],\r\n      scoreUser: [\"Top Utilizadores\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n\r\n  render() {\r\n    //const { from, to } = this.state;\r\n\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    const theme = {\r\n      spacing: [0, 2, 3, 5, 8]\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getGlobalState(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users velocidade`} </ListSubheader>{\" \"}\r\n                {this.state.celerUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users score`} </ListSubheader>{\" \"}\r\n                {this.state.scoreUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        {/* <Grid container spacing={4}>\r\n                                                  <Prod />\r\n                                                </Grid>{\" \"} */}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  getGlobalState = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(`/issues/count?from=${from}&to=${to}`);\r\n      let data = res.data[0];\r\n\r\n      if (data === undefined) data = 0;\r\n\r\n      rest = await axios.get(`/issues/scoreAvg?from=${from}&to=${to}`);\r\n      let dataavg = rest.data[0];\r\n\r\n      console.log(dataavg);\r\n      if (dataavg === undefined) dataavg = 0;\r\n\r\n      resStd = await axios.get(`/issues/scoreStd?from=${from}&to=${to}`);\r\n      let datastd = resStd.data[0];\r\n      if (datastd === undefined) datastd = 0;\r\n\r\n      resLevel = await axios.get(\r\n        `/issues/priority/responseTimeAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataLevel = resLevel.data;\r\n\r\n      let descrLevel = dataLevel.map(l => l._id.name);\r\n      let valueLevel = dataLevel.map(l => l.avgRTime);\r\n\r\n      if (descrLevel === undefined) descrLevel = 0;\r\n      if (valueLevel === undefined) valueLevel = 0;\r\n\r\n      resFast = await axios.get(\r\n        `/issues/collaborators/responseTimeAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataFast = resFast.data;\r\n\r\n      let celerUser = dataFast.map(df => df._id.name);\r\n\r\n      if (celerUser === undefined) celerUser = 0;\r\n\r\n      //\r\n      resScore = await axios.get(\r\n        `/issues/collaborators/scoreAvg?from=${from}&to=${to}`\r\n      );\r\n      let dataScore = resScore.data;\r\n      let scoreUser = dataScore.map(df => df._id.name);\r\n\r\n      if (scoreUser === undefined) scoreUser = 0;\r\n\r\n      this.setState({\r\n        count: data,\r\n        avgScore: dataavg,\r\n        stdDevScore: datastd,\r\n        descrLevel: descrLevel,\r\n        valueLevel: valueLevel,\r\n        celerUser: celerUser,\r\n        scoreUser: scoreUser\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getGlobalState();\r\n  }\r\n}\r\n\r\nexport default Global;\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { paperClasses } from \"../constants/graph\";\r\nimport { paperTable } from \"../constants/table\";\r\nimport { dropdown } from \"../constants/dropdown\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport class Produto extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      prods: [],\r\n      prod: \"\",\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"],\r\n      celerUser: [\"Top Utilizadores\"],\r\n      scoreUser: [\"Top Utilizadores\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n  render() {\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getProductName(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                paddingLeft: \"15px\"\r\n              }}\r\n            >\r\n              <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                Produto{\" \"}\r\n              </InputLabel>{\" \"}\r\n              <Select\r\n                value={this.state.prods}\r\n                //defaultValue={this.state.prod}\r\n                //onChange={this.handleChange}\r\n                onChange={e => {\r\n                  this.getProdAPI(e);\r\n                  this.handleClick(e);\r\n                }}\r\n                input={<Input name=\"prods\" id=\"age-label-placeholder\" />}\r\n                displayEmpty\r\n                name=\"prods\"\r\n                className={dropdown.selectEmpty}\r\n              >\r\n                <MenuItem value={this.state.prod}>\r\n                  <em> Selecione o produto </em>{\" \"}\r\n                </MenuItem>{\" \"}\r\n                {this.state.prods.map((item, key) => (\r\n                  <MenuItem value={item} key={key} name=\"prod\">\r\n                    {\" \"}\r\n                    {item}{\" \"}\r\n                  </MenuItem>\r\n                ))}{\" \"}\r\n              </Select>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users velocidade`} </ListSubheader>{\" \"}\r\n                {this.state.celerUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.paperClasses}>\r\n              <List className={classes.root} subheader={<li />}>\r\n                {\" \"}\r\n                <ListSubheader> {`Top users score`} </ListSubheader>{\" \"}\r\n                {this.state.scoreUser.map(item => (\r\n                  <ListItemText\r\n                    style={{\r\n                      paddingLeft: \"15px\"\r\n                    }}\r\n                    primary={`${item}`}\r\n                  >\r\n                    {\" \"}\r\n                  </ListItemText>\r\n                ))}{\" \"}\r\n              </List>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  // handleChange = prod => {\r\n  //   this.setState({ prod });\r\n  //   prod.forEach(selectedOption =>\r\n  //     console.log(`Selected: ${selectedOption.value}`)\r\n  //   );\r\n  // };\r\n\r\n  handleClick = async event => {\r\n    let value = event.target.value;\r\n\r\n    this.setState({\r\n      prod: value\r\n    });\r\n    console.log(\"1: \" + value);\r\n    return value;\r\n  };\r\n\r\n  getProdAPI = async e => {\r\n    let from = this.state.formFields.from;\r\n    let to = this.state.formFields.to;\r\n    //let value = e.target.value;\r\n    let prod = e.target.value;\r\n\r\n    //console.log(value);\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(\r\n        `/issues/count?from=${from}&to=${to}&product_name=${prod}`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    let data = res.data[0];\r\n    console.log(data);\r\n    if (data === undefined) data = 0;\r\n\r\n    rest = await axios.get(\r\n      `/issues/scoreAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataavg = rest.data[0];\r\n    if (dataavg === undefined) dataavg = 0;\r\n\r\n    resStd = await axios.get(\r\n      `/issues/scoreStd?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let datastd = resStd.data[0];\r\n    if (datastd === undefined) datastd = 0;\r\n\r\n    resLevel = await axios.get(\r\n      `/issues/priority/responseTimeAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataLevel = resLevel.data;\r\n\r\n    let descrLevel = dataLevel.map(l => l._id.name);\r\n    let valueLevel = dataLevel.map(l => l.avgRTime);\r\n    if (descrLevel === undefined) descrLevel = 0;\r\n    if (valueLevel === undefined) valueLevel = 0;\r\n\r\n    resFast = await axios.get(\r\n      `/issues/collaborators/responseTimeAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataFast = resFast.data;\r\n\r\n    const celerUser = dataFast.map(df => df._id.name);\r\n    if (celerUser === undefined) celerUser = 0;\r\n\r\n    //\r\n    resScore = await axios.get(\r\n      `/issues/collaborators/scoreAvg?from=${from}&to=${to}&product_name=${prod}`\r\n    );\r\n    let dataScore = resScore.data;\r\n    let scoreUser = dataScore.map(df => df._id.name);\r\n    if (scoreUser === undefined) scoreUser = 0;\r\n\r\n    this.setState({\r\n      count: data,\r\n      avgScore: dataavg,\r\n      stdDevScore: datastd,\r\n      descrLevel: descrLevel,\r\n      valueLevel: valueLevel,\r\n      celerUser: celerUser,\r\n      scoreUser: scoreUser\r\n    });\r\n  };\r\n\r\n  getProductName = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let resProd;\r\n\r\n    try {\r\n      resProd = await axios.get(`/issues/projects?from=${from}&to=${to}`);\r\n      let data = resProd.data;\r\n      const dataProd = data.map(pn => pn._id.product_name);\r\n      this.setState({\r\n        prods: dataProd\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getProductName();\r\n  }\r\n}\r\n\r\nexport default Produto;\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { paperClasses } from \"../constants/graph\";\r\nimport { paperTable } from \"../constants/table\";\r\nimport { dropdown } from \"../constants/dropdown\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nexport class Colaborador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      name: \"ai\",\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      prods: [\"Sem nome\"],\r\n      prod: \"\",\r\n      count: {\r\n        total: \"-\",\r\n        neval: \"-\"\r\n      },\r\n      avgScore: { avgScore: \"-\" },\r\n      stdDevScore: { stdDevScore: \"-\" },\r\n      descrLevel: [\"Descrição Nivel\"],\r\n      valueLevel: [\"Tempo médio\"]\r\n    };\r\n  }\r\n\r\n  createData = (name, calories, fat, batatas) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat,\r\n      batatas\r\n    };\r\n  };\r\n\r\n  createData2 = (name, calories, fat) => {\r\n    return {\r\n      name,\r\n      calories,\r\n      fat\r\n    };\r\n  };\r\n  render() {\r\n    const rows = [\r\n      this.createData(\"Nº total pedidos\", this.state.count.total),\r\n      this.createData(\"% Pedidos Não Avaliados\", this.state.count.neval),\r\n      this.createData(\r\n        \"Avaliação média Qualidade\",\r\n        this.state.avgScore.avgScore\r\n      ),\r\n      this.createData(\"Desvio padrão\", this.state.stdDevScore.stdDevScore)\r\n    ];\r\n\r\n    const rows2 = [\r\n      this.createData2(this.state.descrLevel[0], this.state.valueLevel[0]),\r\n      this.createData2(this.state.descrLevel[1], this.state.valueLevel[1]),\r\n      this.createData2(this.state.descrLevel[2], this.state.valueLevel[2])\r\n    ];\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <form\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"15px\"\r\n            }}\r\n          >\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"from\"\r\n                label=\"De\"\r\n                type=\"date\"\r\n                name=\"from\"\r\n                //value={this.name}\r\n                //defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.from}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Até\"\r\n                type=\"date\"\r\n                name=\"to\"\r\n                //value={this.target.value}\r\n                //defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n                onChange={e => this.inputChangeHandler.call(this, e)}\r\n                value={this.state.formFields.to}\r\n              />{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid item xs>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                onClick={e => this.getColabName(this.state.formFields)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>{\" \"}\r\n            </Grid>{\" \"}\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                paddingLeft: \"15px\"\r\n              }}\r\n            >\r\n              <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                Produto{\" \"}\r\n              </InputLabel>{\" \"}\r\n              <Select\r\n                value={this.state.prod}\r\n                //defaultValue={this.state.prod}\r\n                //onChange={this.handleChange}\r\n                onChange={e => {\r\n                  this.GetColabAPI(e);\r\n                  this.handleClick(e);\r\n                }}\r\n                input={<Input name=\"prod\" id=\"age-label-placeholder\" />}\r\n                displayEmpty\r\n                name=\"prod\"\r\n                className={dropdown.selectEmpty}\r\n              >\r\n                <MenuItem value={this.state.prod}>\r\n                  <em> Selecione o colaborador </em>{\" \"}\r\n                </MenuItem>{\" \"}\r\n                {this.state.prods.map((item, key) => (\r\n                  <MenuItem value={item} key={key} name=\"prod\">\r\n                    {\" \"}\r\n                    {item}{\" \"}\r\n                  </MenuItem>\r\n                ))}{\" \"}\r\n              </Select>{\" \"}\r\n            </Grid>{\" \"}\r\n          </form>{\" \"}\r\n        </Grid>{\" \"}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.carbs} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row.batatas} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Paper className={classes.root}>\r\n              <Table className={classes.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\"> Nivel de prioridade </TableCell>{\" \"}\r\n                    <TableCell align=\"right\"> Tempo médio </TableCell>{\" \"}\r\n                  </TableRow>{\" \"}\r\n                </TableHead>{\" \"}\r\n                <TableBody>\r\n                  {\" \"}\r\n                  {rows2.map(row2 => (\r\n                    <TableRow key={row2.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\" \"}\r\n                        {row2.name}{\" \"}\r\n                      </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.calories} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.fat} </TableCell>{\" \"}\r\n                      <TableCell align=\"right\"> {row2.carbs} </TableCell>{\" \"}\r\n                    </TableRow>\r\n                  ))}{\" \"}\r\n                </TableBody>{\" \"}\r\n              </Table>{\" \"}\r\n            </Paper>{\" \"}\r\n          </Grid>{\" \"}\r\n        </Grid>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  // handleChange = prod => {\r\n  //   this.setState({ prod });\r\n  //   prod.forEach(selectedOption =>\r\n  //     console.log(`Selected: ${selectedOption.value}`)\r\n  //   );\r\n  // };\r\n\r\n  handleClick = async event => {\r\n    let value = event.target.value;\r\n\r\n    this.setState({\r\n      prod: value\r\n    });\r\n    console.log(this.state);\r\n\r\n    return value;\r\n  };\r\n\r\n  GetColabAPI = async e => {\r\n    let from = this.state.formFields.from;\r\n    let to = this.state.formFields.to;\r\n    //let value = e.target.value;\r\n    let colab = e.target.value;\r\n\r\n    //console.log(value);\r\n    let res;\r\n    let rest;\r\n    let resStd;\r\n    let resLevel;\r\n    let resFast;\r\n    let resScore;\r\n    try {\r\n      res = await axios.get(\r\n        `/issues/count?from=${from}&to=${to}&collaborator_name=${colab}`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    let data = res.data[0];\r\n    if (data === undefined) data = 0;\r\n\r\n    rest = await axios.get(\r\n      `/issues/scoreAvg?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let dataavg = rest.data[0];\r\n    if (dataavg === undefined) dataavg = 0;\r\n\r\n    resStd = await axios.get(\r\n      `/issues/scoreStd?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let datastd = resStd.data[0];\r\n    if (datastd === undefined) datastd = 0;\r\n\r\n    resLevel = await axios.get(\r\n      `/issues/priority/responseTimeAvg?from=${from}&to=${to}&collaborator_name=${colab}`\r\n    );\r\n    let dataLevel = resLevel.data;\r\n\r\n    let descrLevel = dataLevel.map(l => l._id.name);\r\n    let valueLevel = dataLevel.map(l => l.avgRTime);\r\n    if (descrLevel === undefined) descrLevel = 0;\r\n    if (valueLevel === undefined) valueLevel = 0;\r\n\r\n    this.setState({\r\n      count: data,\r\n      avgScore: dataavg,\r\n      stdDevScore: datastd,\r\n      descrLevel: descrLevel,\r\n      valueLevel: valueLevel\r\n    });\r\n  };\r\n\r\n  getColabName = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    let resProd;\r\n\r\n    try {\r\n      resProd = await axios.get(`/issues/collaborators?from=${from}&to=${to}`);\r\n      let data = resProd.data;\r\n      const dataProd = data.map(pn => pn._id.name);\r\n      this.setState(\r\n        {\r\n          prods: dataProd\r\n        },\r\n        () => {\r\n          console.log(\"1\" + this.state);\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.getColabName();\r\n    //this.GetColabAPI();\r\n  }\r\n}\r\n\r\nexport default Colaborador;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nclass Avg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formFields: { from: \"\", to: \"\" },\r\n      //score: 1,\r\n      //finalDate: [\"2019-06-01\"]\r\n      labels: [],\r\n      data: []\r\n\r\n      // const data = {\r\n      //   labels: this.state.finalDate,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: \"Score\",\r\n      //       fill: false,\r\n      //       lineTension: 0.1,\r\n      //       backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      //       borderColor: \"rgba(75,192,192,1)\",\r\n      //       borderCapStyle: \"butt\",\r\n      //       borderDash: [],\r\n      //       borderDashOffset: 0.0,\r\n      //       borderJoinStyle: \"miter\",\r\n      //       pointBorderColor: \"rgba(75,192,192,1)\",\r\n      //       pointBackgroundColor: \"#fff\",\r\n      //       pointBorderWidth: 1,\r\n      //       pointHoverRadius: 5,\r\n      //       pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      //       pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      //       pointHoverBorderWidth: 2,\r\n      //       pointRadius: 1,\r\n      //       pointHitRadius: 10,\r\n      //       data: this.state.score\r\n      //     }\r\n      //   ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form style={{ display: \"inline-flex\", padding: \"15px\" }}>\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"De\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              //value={this.name}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.from}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Até\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              //value={this.target.value}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.to}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={e => this.getData(this.state.formFields)}\r\n            >\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n          </Grid>{\" \"}\r\n        </form>\r\n\r\n        <Line data={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getData = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    try {\r\n      let res = await axios.get(\r\n        `/issues/periodic/count?from=${from}&to=${to}`\r\n      );\r\n      let data = res.data;\r\n      let finalDate = [];\r\n      let score = data.map(s => s.count);\r\n      let date = data.map(d =>\r\n        finalDate.push(`${d._id.year}-${d._id.month}-${d._id.day}`)\r\n      );\r\n      console.log(score);\r\n      console.log(finalDate);\r\n      this.setState({\r\n        labels: finalDate,\r\n        datasets: [\r\n          {\r\n            label: \"média\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 0.1,\r\n            pointHitRadius: 10,\r\n            data: score\r\n          }\r\n        ]\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = { ...this.state.formFields };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n}\r\n\r\nexport default Avg;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { classes } from \"../constants/dashboard\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nclass Std extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formFields: {\r\n        from: \"\",\r\n        to: \"\"\r\n      },\r\n      //score: 1,\r\n      //finalDate: [\"2019-06-01\"]\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: [],\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: \"rgba(75,192,192,0.4)\",\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgba(75,192,192,1)\",\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: []\r\n        }\r\n      ]\r\n\r\n      // const data = {\r\n      //   labels: this.state.finalDate,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: \"Score\",\r\n      //       fill: false,\r\n      //       lineTension: 0.1,\r\n      //       backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      //       borderColor: \"rgba(75,192,192,1)\",\r\n      //       borderCapStyle: \"butt\",\r\n      //       borderDash: [],\r\n      //       borderDashOffset: 0.0,\r\n      //       borderJoinStyle: \"miter\",\r\n      //       pointBorderColor: \"rgba(75,192,192,1)\",\r\n      //       pointBackgroundColor: \"#fff\",\r\n      //       pointBorderWidth: 1,\r\n      //       pointHoverRadius: 5,\r\n      //       pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      //       pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      //       pointHoverBorderWidth: 2,\r\n      //       pointRadius: 1,\r\n      //       pointHitRadius: 10,\r\n      //       data: this.state.score\r\n      //     }\r\n      //   ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          style={{\r\n            display: \"inline-flex\",\r\n            padding: \"15px\"\r\n          }}\r\n        >\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"De\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              //value={this.name}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={from => moment(from).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.from}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <TextField\r\n              id=\"date\"\r\n              label=\"Até\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              //value={this.target.value}\r\n              defaultValue=\"2017-05-24\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              formatDate={date => moment(date).format(\"DD-MM-YYYY\")}\r\n              onChange={e => this.inputChangeHandler.call(this, e)}\r\n              value={this.state.formFields.to}\r\n            />{\" \"}\r\n          </Grid>{\" \"}\r\n          <Grid item xs>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={e => this.getData(this.state.formFields)}\r\n            >\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n          </Grid>{\" \"}\r\n        </form>\r\n        <Line data={this.state} />{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getData = async (from, to) => {\r\n    from = this.state.formFields.from;\r\n    to = this.state.formFields.to;\r\n\r\n    try {\r\n      let res = await axios.get(\r\n        `/issues/periodic/scoreAvg?from=${from}&to=${to}`\r\n      );\r\n      let data = res.data;\r\n      let finalDate = [];\r\n      let score = data.map(s => s.avgScore);\r\n      let date = data.map(d =>\r\n        finalDate.push(`${d._id.year}-${d._id.month}-${d._id.day}`)\r\n      );\r\n      console.log(score);\r\n      console.log(finalDate);\r\n      this.setState({\r\n        labels: finalDate,\r\n        datasets: [\r\n          {\r\n            label: \"Desvio Padrão\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: score\r\n          }\r\n        ]\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  inputChangeHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let formFields = {\r\n      ...this.state.formFields\r\n    };\r\n    formFields[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formFields\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n}\r\n\r\nexport default Std;\r\n","import React, { Component } from \"react\";\r\nimport { classes } from \"../constants/graph\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avg from \"../Graphs/avg\";\r\nimport Std from \"../Graphs/std\";\r\n\r\nexport class Temporais extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Avg />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Std />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temporais;\r\n","import {\r\n    makeStyles\r\n} from '@material-ui/core/styles';\r\n\r\n\r\nexport const classes = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        top: 0\r\n    }\r\n\r\n}));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Global from \"../Dashboard/Global\";\r\nimport Produto from \"../Dashboard/Produto\";\r\nimport Colaborador from \"../Dashboard/Colaborador\";\r\nimport Temporais from \"../Dashboard/Temporais\";\r\nimport CSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nimport { classes } from \"../constants/tabs\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      style={{\r\n        padding: 8 * 3\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {props.children}{\" \"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\n//const sections = [\"Indicador 1\", \"Indicador 2\", \"Indicador 2\", \"Indicador 2\"];\r\n\r\nconst PageShell = (Page, previous) => {\r\n  return props => (\r\n    <div className=\"page\">\r\n      <CSSTransitionGroup\r\n        transitionAppear={true}\r\n        transitionAppearTimeout={600}\r\n        transitionEnterTimeout={600}\r\n        transitionLeaveTimeout={600}\r\n        transitionName={props.match.path === \"/one\" ? \"SlideIn\" : \"SlideOut\"}\r\n      >\r\n        {console.log(props)} <Page {...props} />{\" \"}\r\n      </CSSTransitionGroup>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = props => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function onLogoutClick(e) {\r\n    e.preventDefault();\r\n    props.logoutUser();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          {\" \"}\r\n          {/* <Tabs value={value} onChange={handleChange}>\r\n                      {sections.map(section => (\r\n                        <Tab label={section} />\r\n                      ))}\r\n                    </Tabs> */}{\" \"}\r\n          <Tab label=\"Indicadores Globais\" />\r\n          <Tab label=\"Indicadores Colaboradores\" />\r\n          <Tab label=\"Indicadores Produto\" />\r\n          <Tab label=\"Indicadores Temporais\" />\r\n          {props.name}\r\n          <Button color=\"inherit\" onClick={onLogoutClick.bind(this)}>\r\n            Logout{\" \"}\r\n          </Button>{\" \"}\r\n        </Tabs>{\" \"}\r\n      </AppBar>{\" \"}\r\n      {value === 0 && (\r\n        <TabContainer>\r\n          <Container maxWidth=\"xl\">\r\n            <Global />\r\n          </Container>{\" \"}\r\n        </TabContainer>\r\n      )}{\" \"}\r\n      {value === 1 && (\r\n        <TabContainer>\r\n          <Container maxWidth=\"xl\">\r\n            <Colaborador />\r\n          </Container>{\" \"}\r\n        </TabContainer>\r\n      )}{\" \"}\r\n      {value === 2 && (\r\n        <TabContainer>\r\n          <Container maxWidth=\"xl\">\r\n            <Produto />\r\n          </Container>{\" \"}\r\n        </TabContainer>\r\n      )}{\" \"}\r\n      {value === 3 && (\r\n        <TabContainer>\r\n          <Container maxWidth=\"xl\">\r\n            <Temporais />\r\n          </Container>{\" \"}\r\n        </TabContainer>\r\n      )}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\n//export default Dashboard;\r\nHeader.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    logoutUser\r\n  }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nfunction MadeWithLove() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {\"For \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Programação Web\r\n      </Link>\r\n      {\" team.\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"10vh\"\r\n  },\r\n\r\n  footer: {\r\n    padding: theme.spacing(0),\r\n    marginTop: \"auto\",\r\n    backgroundColor: \"#3f51b5\"\r\n  }\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <footer className={classes.footer}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography variant=\"body1\"> IPCA 2019 @ MEI </Typography>{\" \"}\r\n            <MadeWithLove />\r\n          </Container>{\" \"}\r\n        </footer>{\" \"}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nexport class Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"../actions/authActions\";\r\nimport Login from \"./auth/Login\";\r\nimport Register from \"./auth/Register\";\r\nimport PrivateRoute from \"./private/PrivateRoute\";\r\n\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Signup from \"./auth/Register\";\r\nimport \"typeface-roboto\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Switch>\r\n          <PrivateRoute path=\"/Dashboard\" component={Dashboard} />{\" \"}\r\n          <Route path=\"/Login\" component={Login} />{\" \"}\r\n          <Route path=\"/\" exact component={Login} />{\" \"}\r\n          <Route path=\"/Register\" exact component={Register} />{\" \"}\r\n          <Route path=\"/Signup\" component={Signup} />{\" \"}\r\n        </Switch>{\" \"}\r\n      </HashRouter>{\" \"}\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App; // instead of \"export default App;\"\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}